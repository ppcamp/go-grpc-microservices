syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "/src/controllers/user_password";

message CreatePasswordInput {
	string user = 1; // user's id
	string password = 2; // user's password
}

message RecoverInput {
	string user = 1; // user's id
}

message RecoverPayload {
	string secret = 1; // some random secret sent to user
}

message ActivatePayload {
	string secret = 1; // the secret
}

message UpdatePasswordInput {
	/* The scret can be the same secret from RecoverPayload (Recover) or a valid
	 * Token(UpdateByToken) */
	string secret = 1;
	string password = 2; // the new password
}

service UserPasswordService {
	/* Create a new (disabled) user and return a temp secret to activate it */
	rpc Create(CreatePasswordInput) returns (RecoverPayload) {}
	/* Use the secret from Create to activate the user */
	rpc Activate(ActivatePayload) returns (google.protobuf.Empty) {}
	/* Create a temp secret that allows user to update its password */
	rpc Recover(RecoverInput) returns (RecoverPayload) {}
	/* Use the secret got from Recover to update some user password */
	rpc Update(UpdatePasswordInput) returns (google.protobuf.Empty) {}
	/* Use the token to update the current user password */
	rpc UpdateByToken(UpdatePasswordInput) returns (google.protobuf.Empty) {}
}