syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "/generated/user_password";

message CreateInput {
	string user = 1; // user's id
	string password = 2; // user's password
}

message RecoverInput {
	string email = 1; // user's email
}

message RecoverOutput {
	string secret = 1; // some random secret sent to user
}

message CreateOutput {
	string secret = 1; // some random secret sent to user
}

message ActivateInput {
	string secret = 1; // the secret
}

message UpdateInput {
	/* The scret can be the same secret from RecoverOutput (Recover) or a valid
	 * Token(UpdateByToken) */
	string secret = 1;
	string password = 2; // the new password
}

message DeleteInput {
	string token = 1; // jwt
}

service UserPasswordService {
	// Create a new (disabled) user and return a temp secret to activate it'
	rpc Create(CreateInput) returns (CreateOutput) {}
	// Use the secret from Create to activate the user
	rpc Activate(ActivateInput) returns (google.protobuf.Empty) {}
	// Create a temp secret that allows user to update its password
	rpc Recover(RecoverInput) returns (RecoverOutput) {}
	// Use the secret got from Recover to update some user password
	rpc Update(UpdateInput) returns (google.protobuf.Empty) {}
	// Use the token to update the current user password
	rpc UpdateByToken(UpdateInput) returns (google.protobuf.Empty) {}
	// Delete the current user
	rpc Delete(DeleteInput) returns (google.protobuf.Empty) {}
}